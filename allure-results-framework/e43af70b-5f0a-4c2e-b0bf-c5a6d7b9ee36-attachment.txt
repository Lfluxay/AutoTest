2025-08-10 19:26:51 | INFO | test_case.conftest:pytest_runtest_setup:128 | 开始执行测试: test_single_api_cases
2025-08-10 19:26:51 | WARNING | utils.config.parser:load_env_config:52 | 环境配置文件不存在: E:\code_project\cc_p\auto_case\config\env_config.yaml
2025-08-10 19:26:51 | WARNING | utils.config.parser:load_env_config:52 | 环境配置文件不存在: E:\code_project\cc_p\auto_case\config\env_config.yaml
2025-08-10 19:26:51 | INFO | utils.core.base.test_base:setup_method:26 | 开始执行测试: test_single_api_cases
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_test:32 | ================================================================================
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_test:33 | 🚀 开始执行测试: test_single_api_cases
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_test:36 | ================================================================================
2025-08-10 19:26:51 | INFO | test_case.api.test_api_driver:setup_test:16 | API测试环境准备完成
2025-08-10 19:26:51 | INFO | test_case.api.test_api_driver:test_single_api_cases:78 | 执行测试文件: E:\code_project\cc_p\auto_case\data\api\api_test_cases.yaml
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_test:32 | ================================================================================
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_test:33 | 🚀 开始执行测试: 获取用户信息
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_test:35 | 📝 测试描述: 测试获取单个用户信息的API接口
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_test:36 | ================================================================================
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 1: 测试用例初始化
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 准备测试环境和数据
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:log_action:89 |    ⚡ 加载测试用例配置: {
  "case_name": "获取用户信息",
  "test_type": "unknown",
  "priority": "normal"
}
2025-08-10 19:26:51 | INFO | utils.core.base.test_base:execute_test_case:116 | 执行测试用例: 获取用户信息
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 2: 执行测试逻辑
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 执行主要测试步骤
2025-08-10 19:26:51 | INFO | utils.logging.logger:log_step:153 |    步骤: 发送GET请求 https://jsonplaceholder.typicode.com/users/1
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:log_api_request:94 |    🌐 API请求: GET https://jsonplaceholder.typicode.com/users/1
2025-08-10 19:26:51 | INFO | utils.logging.test_step_logger:log_api_request:97 |    📤 请求头: {
  "User-Agent": "python-requests/2.31.0",
  "Accept-Encoding": "gzip, deflate, br",
  "Accept": "application/json",
  "Connection": "keep-alive"
}
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_api_response:122 |    ✅ API响应: 200
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_api_response:125 |    ⏱️ 响应时间: 0.957s
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_api_response:128 |    📥 响应头: {
  "Date": "Sun, 10 Aug 2025 11:27:05 GMT",
  "Content-Type": "application/json; charset=utf-8",
  "Transfer-Encoding": "chunked",
  "Connection": "keep-alive",
  "Access-Control-Allow-Credentials": "true",
  "Cache-Control": "max-age=43200",
  "Etag": "W/\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\"",
  "Expires": "-1",
  "Nel": "{\"report_to\":\"heroku-nel\",\"response_headers\":[\"Via\"],\"max_age\":3600,\"success_fraction\":0.01,\"failure_fraction\":0.1}",
  "Pragma": "no-cache",
  "Report-To": "{\"group\":\"heroku-nel\",\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?s=Q%2F3AGq5ubChmYQDJ6LNckCnhAajzQPDvwRxRPWP8muc%3D\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\u0026ts=1752278603\"}],\"max_age\":3600}",
  "Reporting-Endpoints": "heroku-nel=\"https://nel.heroku.com/reports?s=Q%2F3AGq5ubChmYQDJ6LNckCnhAajzQPDvwRxRPWP8muc%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752278603\"",
  "Server": "cloudflare",
  "Vary": "Origin, Accept-Encoding",
  "Via": "2.0 heroku-router",
  "X-Content-Type-Options": "nosniff",
  "X-Powered-By": "Express",
  "X-Ratelimit-Limit": "1000",
  "X-Ratelimit-Remaining": "999",
  "X-Ratelimit-Reset": "1752278654",
  "Age": "4746",
  "Cf-Cache-Status": "HIT",
  "Content-Encoding": "br",
  "CF-RAY": "96cf245c7879961c-KIX",
  "alt-svc": "h3=\":443\"; ma=86400"
}
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_api_response:131 |    📋 响应体: {
  "id": 1,
  "name": "Leanne Graham",
  "username": "Bret",
  "email": "***邮箱***",
  "address": {
    "street": "Kulas Light",
    "suite": "Apt. 556",
    "city": "Gwenborough",
    "zipcode": "92998-3874",
    "geo": {
      "lat": "-37.3159",
      "lng": "81.1496"
    }
  },
  "phone": "1-770-736-8031 x56442",
  "website": "hildegard.org",
  "company": {
    "name": "Romaguera-Crona",
    "catchPhrase": "Multi-layered client-server neural-net",
    "bs": "harness real-time e-markets"
  }
}
2025-08-10 19:26:52 | INFO | utils.logging.logger:log_step:153 |    步骤: 验证响应 4个断言
2025-08-10 19:26:52 | INFO | utils.logging.logger:log_assertion:158 |    断言 [status_code] ✓ 期望: 200 | 实际: 200
2025-08-10 19:26:52 | INFO | utils.logging.logger:log_assertion:158 |    断言 [json_path[$.id] eq] ✓ 期望: 1 | 实际: 1
2025-08-10 19:26:52 | INFO | utils.logging.logger:log_assertion:158 |    断言 [json_path[$.name] not_empty] ✓ 期望: None | 实际: Leanne Graham
2025-08-10 19:26:52 | INFO | utils.logging.logger:log_assertion:158 |    断言 [json_path[$.email] contains] ✓ 期望: @ | 实际: Sincere@april.biz
2025-08-10 19:26:52 | INFO | utils.core.api.keywords:verify_response:196 | 响应验证通过
2025-08-10 19:26:52 | INFO | utils.logging.logger:log_step:153 |    步骤: 提取数据 2个提取项
2025-08-10 19:26:52 | WARNING | utils.data.extractor:extract_from_response:172 | 不支持的提取类型: json_path
2025-08-10 19:26:52 | WARNING | utils.data.extractor:extract_from_response:172 | 不支持的提取类型: json_path
2025-08-10 19:26:52 | INFO | utils.data.extractor:extract_from_response:174 | 数据提取完成: {}
2025-08-10 19:26:52 | INFO | utils.core.api.keywords:extract_data:221 | 数据提取完成: {}
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 1.009s)
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 3: 测试结果验证
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 验证测试执行结果
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_assertion:173 |    ✅ 断言: 测试状态检查
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_assertion:174 |    📋 期望值: PASS
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_assertion:175 |    📊 实际值: PASS
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_assertion:176 |    🎯 结果: 通过
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_assertion:179 |    💬 说明: 测试用例 获取用户信息 执行结果
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:26:52 | INFO | utils.core.base.test_base:execute_test_case:149 | 测试用例执行成功: 获取用户信息
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_test:221 | ================================================================================
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_test:224 | ✅ 测试完成: 获取用户信息
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_test:225 | ⏱️ 总耗时: 1.009s
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_test:226 | 📊 总步骤数: 3
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_test:232 | ✅ 通过步骤: 3
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_test:233 | ❌ 失败步骤: 0
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_test:236 | 📋 测试总结:
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_test:238 |    测试结果: PASS
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_test:238 |    错误信息: None
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_test:240 | ================================================================================
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:start_test:32 | ================================================================================
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:start_test:33 | 🚀 开始执行测试: 创建新文章
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:start_test:35 | 📝 测试描述: 测试创建新文章的API接口
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:start_test:36 | ================================================================================
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 1: 测试用例初始化
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 准备测试环境和数据
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_action:89 |    ⚡ 加载测试用例配置: {
  "case_name": "创建新文章",
  "test_type": "unknown",
  "priority": "normal"
}
2025-08-10 19:26:52 | INFO | utils.core.base.test_base:execute_test_case:116 | 执行测试用例: 创建新文章
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.004s)
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 2: 执行测试逻辑
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 执行主要测试步骤
2025-08-10 19:26:52 | INFO | utils.logging.logger:log_step:153 |    步骤: 发送POST请求 https://jsonplaceholder.typicode.com/posts
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_api_request:94 |    🌐 API请求: POST https://jsonplaceholder.typicode.com/posts
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_api_request:97 |    📤 请求头: {
  "User-Agent": "python-requests/2.31.0",
  "Accept-Encoding": "gzip, deflate, br",
  "Accept": "*/*",
  "Connection": "keep-alive",
  "Content-Type": "application/json"
}
2025-08-10 19:26:52 | INFO | utils.logging.test_step_logger:log_api_request:103 |    📦 请求体: {
  "title": "测试文章标题",
  "body": "这是一篇测试文章的内容",
  "userId": 1
}
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_api_response:122 |    ❌ API响应: 500
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_api_response:125 |    ⏱️ 响应时间: 0.410s
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_api_response:128 |    📥 响应头: {
  "Date": "Sun, 10 Aug 2025 11:27:06 GMT",
  "Content-Type": "text/html; charset=utf-8",
  "Content-Length": "755",
  "Connection": "keep-alive",
  "Access-Control-Allow-Credentials": "true",
  "Cache-Control": "no-cache",
  "Etag": "W/\"2f3-3p4hjuLExFWDjhVA8owNYvDZVHY\"",
  "Expires": "-1",
  "Nel": "{\"report_to\":\"heroku-nel\",\"response_headers\":[\"Via\"],\"max_age\":3600,\"success_fraction\":0.01,\"failure_fraction\":0.1}",
  "Pragma": "no-cache",
  "Report-To": "{\"group\":\"heroku-nel\",\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?s=%2Bekh8ebcYmWXbsFIe6Ane%2B0Zm1bkmuioYM483vlhLAs%3D\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\u0026ts=1754825226\"}],\"max_age\":3600}",
  "Reporting-Endpoints": "heroku-nel=\"https://nel.heroku.com/reports?s=%2Bekh8ebcYmWXbsFIe6Ane%2B0Zm1bkmuioYM483vlhLAs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754825226\"",
  "Server": "cloudflare",
  "Vary": "Origin, X-HTTP-Method-Override, Accept-Encoding",
  "Via": "2.0 heroku-router",
  "X-Powered-By": "Express",
  "X-Ratelimit-Limit": "1000",
  "X-Ratelimit-Remaining": "999",
  "X-Ratelimit-Reset": "1754825280",
  "Cf-Cache-Status": "DYNAMIC",
  "CF-RAY": "96cf245e6b42961c-KIX",
  "alt-svc": "h3=\":443\"; ma=86400"
}
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_api_response:131 |    📋 响应体: SyntaxError: Unexpected token t in JSON at position 0
    at JSON.parse (<anonymous>)
    at createStrictSyntaxError (/app/node_modules/body-parser/lib/types/json.js:158:10)
    at parse (/app/node_modules/body-parser/lib/types/json.js:83:15)
    at /app/node_modules/body-parser/lib/read.js:121:18
    at invokeCallback (/app/node_modules/body-parser/node_modules/raw-body/index.js:224:16)
    at done (/app/node_modules/body-parser/node_modules/raw-body/index.js:213:7)
    at IncomingMessage.onEnd (/app/node_modules/body-parser/node_modules/raw-body/index.js:273:7)
    at IncomingMessage.emit (node:events:525:35)
    at endReadableNT (node:internal/streams/readable:1358:12)
    at processTicksAndRejections (node:internal/process/task_queues:83:21)
2025-08-10 19:26:53 | INFO | utils.logging.logger:log_step:153 |    步骤: 验证响应 3个断言
2025-08-10 19:26:53 | INFO | utils.logging.logger:log_assertion:158 |    断言 [status_code] ✗ 期望: 201 | 实际: 500
2025-08-10 19:26:53 | ERROR | utils.core.api.assertions:assert_status_code:35 | 创建成功状态码应为201
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.411s)
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 3: 测试结果验证
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 验证测试执行结果
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_assertion:173 |    ❌ 断言: 测试状态检查
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_assertion:174 |    📋 期望值: PASS
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_assertion:175 |    📊 实际值: FAIL
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_assertion:176 |    🎯 结果: 失败
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_assertion:179 |    💬 说明: 测试用例 创建新文章 执行结果
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.001s)
2025-08-10 19:26:53 | ERROR | utils.core.base.test_base:execute_test_case:151 | 测试用例执行失败: 创建新文章, 错误: 创建成功状态码应为201
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_test:221 | ================================================================================
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_test:224 | ❌ 测试完成: 创建新文章
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_test:225 | ⏱️ 总耗时: 0.415s
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_test:226 | 📊 总步骤数: 3
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_test:232 | ✅ 通过步骤: 3
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_test:233 | ❌ 失败步骤: 0
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_test:236 | 📋 测试总结:
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_test:238 |    测试结果: FAIL
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_test:238 |    错误信息: 创建成功状态码应为201
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_test:240 | ================================================================================
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:start_test:32 | ================================================================================
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:start_test:33 | 🚀 开始执行测试: 更新文章信息
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:start_test:35 | 📝 测试描述: 测试更新文章信息的API接口
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:start_test:36 | ================================================================================
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 1: 测试用例初始化
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 准备测试环境和数据
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_action:89 |    ⚡ 加载测试用例配置: {
  "case_name": "更新文章信息",
  "test_type": "unknown",
  "priority": "normal"
}
2025-08-10 19:26:53 | INFO | utils.core.base.test_base:execute_test_case:116 | 执行测试用例: 更新文章信息
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 2: 执行测试逻辑
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 执行主要测试步骤
2025-08-10 19:26:53 | INFO | utils.logging.logger:log_step:153 |    步骤: 发送PUT请求 https://jsonplaceholder.typicode.com/posts/1
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_api_request:94 |    🌐 API请求: PUT https://jsonplaceholder.typicode.com/posts/1
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_api_request:97 |    📤 请求头: {
  "User-Agent": "python-requests/2.31.0",
  "Accept-Encoding": "gzip, deflate, br",
  "Accept": "*/*",
  "Connection": "keep-alive",
  "Content-Type": "application/json"
}
2025-08-10 19:26:53 | INFO | utils.logging.test_step_logger:log_api_request:103 |    📦 请求体: {
  "id": 1,
  "title": "更新后的文章标题",
  "body": "更新后的文章内容",
  "userId": 1
}
2025-08-10 19:27:01 | WARNING | utils.core.api.client:_execute_with_retry:226 | 请求失败，1秒后重试 (第1次): HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Max retries exceeded with url: /posts/1 (Caused by ResponseError('too many 500 error responses'))
2025-08-10 19:27:10 | WARNING | utils.core.api.client:_execute_with_retry:226 | 请求失败，2秒后重试 (第2次): HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Max retries exceeded with url: /posts/1 (Caused by ResponseError('too many 500 error responses'))
2025-08-10 19:27:20 | WARNING | utils.core.api.client:_execute_with_retry:226 | 请求失败，4秒后重试 (第3次): HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Max retries exceeded with url: /posts/1 (Caused by ResponseError('too many 500 error responses'))
2025-08-10 19:27:32 | ERROR | utils.core.api.client:_execute_with_retry:229 | 请求失败，已重试3次: HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Max retries exceeded with url: /posts/1 (Caused by ResponseError('too many 500 error responses'))
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 39.664s)
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 3: 测试结果验证
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 验证测试执行结果
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:log_assertion:173 |    ❌ 断言: 测试状态检查
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:log_assertion:174 |    📋 期望值: PASS
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:log_assertion:175 |    📊 实际值: FAIL
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:log_assertion:176 |    🎯 结果: 失败
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:log_assertion:179 |    💬 说明: 测试用例 更新文章信息 执行结果
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:27:32 | ERROR | utils.core.base.test_base:execute_test_case:151 | 测试用例执行失败: 更新文章信息, 错误: HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Max retries exceeded with url: /posts/1 (Caused by ResponseError('too many 500 error responses'))
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_test:221 | ================================================================================
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_test:224 | ❌ 测试完成: 更新文章信息
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_test:225 | ⏱️ 总耗时: 39.664s
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_test:226 | 📊 总步骤数: 3
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_test:232 | ✅ 通过步骤: 3
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_test:233 | ❌ 失败步骤: 0
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_test:236 | 📋 测试总结:
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_test:238 |    测试结果: FAIL
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_test:238 |    错误信息: HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Max retries exceeded with url: /posts/1 (Caused by ResponseError('too many 500 error responses'))
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_test:240 | ================================================================================
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:start_test:32 | ================================================================================
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:start_test:33 | 🚀 开始执行测试: 删除文章
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:start_test:35 | 📝 测试描述: 测试删除文章的API接口
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:start_test:36 | ================================================================================
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 1: 测试用例初始化
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 准备测试环境和数据
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:log_action:89 |    ⚡ 加载测试用例配置: {
  "case_name": "删除文章",
  "test_type": "unknown",
  "priority": "normal"
}
2025-08-10 19:27:32 | INFO | utils.core.base.test_base:execute_test_case:116 | 执行测试用例: 删除文章
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 2: 执行测试逻辑
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 执行主要测试步骤
2025-08-10 19:27:32 | INFO | utils.logging.logger:log_step:153 |    步骤: 发送DELETE请求 https://jsonplaceholder.typicode.com/posts/1
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:log_api_request:94 |    🌐 API请求: DELETE https://jsonplaceholder.typicode.com/posts/1
2025-08-10 19:27:32 | INFO | utils.logging.test_step_logger:log_api_request:97 |    📤 请求头: {
  "User-Agent": "python-requests/2.31.0",
  "Accept-Encoding": "gzip, deflate, br",
  "Accept": "*/*",
  "Connection": "keep-alive"
}
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_response:122 |    ✅ API响应: 200
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_response:125 |    ⏱️ 响应时间: 0.426s
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_response:128 |    📥 响应头: {
  "Date": "Sun, 10 Aug 2025 11:27:46 GMT",
  "Content-Type": "application/json; charset=utf-8",
  "Transfer-Encoding": "chunked",
  "Connection": "keep-alive",
  "Access-Control-Allow-Credentials": "true",
  "Cache-Control": "no-cache",
  "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"",
  "Expires": "-1",
  "Nel": "{\"report_to\":\"heroku-nel\",\"response_headers\":[\"Via\"],\"max_age\":3600,\"success_fraction\":0.01,\"failure_fraction\":0.1}",
  "Pragma": "no-cache",
  "Report-To": "{\"group\":\"heroku-nel\",\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?s=WPXV5AdfB7erlyryQQ36BHNmgt%2F4L2ao91YEzR0ujLs%3D\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\u0026ts=1754825266\"}],\"max_age\":3600}",
  "Reporting-Endpoints": "heroku-nel=\"https://nel.heroku.com/reports?s=WPXV5AdfB7erlyryQQ36BHNmgt%2F4L2ao91YEzR0ujLs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754825266\"",
  "Server": "cloudflare",
  "Vary": "Origin, Accept-Encoding",
  "Via": "2.0 heroku-router",
  "X-Content-Type-Options": "nosniff",
  "X-Powered-By": "Express",
  "X-Ratelimit-Limit": "1000",
  "X-Ratelimit-Remaining": "982",
  "X-Ratelimit-Reset": "1754825280",
  "Cf-Cache-Status": "DYNAMIC",
  "Content-Encoding": "br",
  "CF-RAY": "96cf2558c883961c-KIX",
  "alt-svc": "h3=\":443\"; ma=86400"
}
2025-08-10 19:27:33 | INFO | utils.logging.logger:log_step:153 |    步骤: 验证响应 1个断言
2025-08-10 19:27:33 | INFO | utils.logging.logger:log_assertion:158 |    断言 [status_code] ✓ 期望: 200 | 实际: 200
2025-08-10 19:27:33 | INFO | utils.core.api.keywords:verify_response:196 | 响应验证通过
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.426s)
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 3: 测试结果验证
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 验证测试执行结果
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_assertion:173 |    ✅ 断言: 测试状态检查
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_assertion:174 |    📋 期望值: PASS
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_assertion:175 |    📊 实际值: PASS
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_assertion:176 |    🎯 结果: 通过
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_assertion:179 |    💬 说明: 测试用例 删除文章 执行结果
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:27:33 | INFO | utils.core.base.test_base:execute_test_case:149 | 测试用例执行成功: 删除文章
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:221 | ================================================================================
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:224 | ✅ 测试完成: 删除文章
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:225 | ⏱️ 总耗时: 0.430s
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:226 | 📊 总步骤数: 3
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:232 | ✅ 通过步骤: 3
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:233 | ❌ 失败步骤: 0
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:236 | 📋 测试总结:
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:238 |    测试结果: PASS
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:238 |    错误信息: None
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:240 | ================================================================================
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_test:32 | ================================================================================
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_test:33 | 🚀 开始执行测试: 获取不存在的用户
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_test:35 | 📝 测试描述: 测试获取不存在用户时的错误处理
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_test:36 | ================================================================================
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 1: 测试用例初始化
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 准备测试环境和数据
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_action:89 |    ⚡ 加载测试用例配置: {
  "case_name": "获取不存在的用户",
  "test_type": "unknown",
  "priority": "normal"
}
2025-08-10 19:27:33 | INFO | utils.core.base.test_base:execute_test_case:116 | 执行测试用例: 获取不存在的用户
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 2: 执行测试逻辑
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 执行主要测试步骤
2025-08-10 19:27:33 | INFO | utils.logging.logger:log_step:153 |    步骤: 发送GET请求 https://jsonplaceholder.typicode.com/users/999
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_request:94 |    🌐 API请求: GET https://jsonplaceholder.typicode.com/users/999
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_request:97 |    📤 请求头: {
  "User-Agent": "python-requests/2.31.0",
  "Accept-Encoding": "gzip, deflate, br",
  "Accept": "application/json",
  "Connection": "keep-alive"
}
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_response:122 |    ❌ API响应: 404
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_response:125 |    ⏱️ 响应时间: 0.526s
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_response:128 |    📥 响应头: {
  "Date": "Sun, 10 Aug 2025 11:27:46 GMT",
  "Content-Type": "application/json; charset=utf-8",
  "Transfer-Encoding": "chunked",
  "Connection": "keep-alive",
  "Access-Control-Allow-Credentials": "true",
  "Cache-Control": "max-age=43200",
  "Etag": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\"",
  "Expires": "-1",
  "Nel": "{\"report_to\":\"heroku-nel\",\"response_headers\":[\"Via\"],\"max_age\":3600,\"success_fraction\":0.01,\"failure_fraction\":0.1}",
  "Pragma": "no-cache",
  "Report-To": "{\"group\":\"heroku-nel\",\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?s=9uWb7UpOrNG9tEIEzFkhcLvwAGgdawjUpWYD4w04Ssg%3D\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\u0026ts=1754824955\"}],\"max_age\":3600}",
  "Reporting-Endpoints": "heroku-nel=\"https://nel.heroku.com/reports?s=9uWb7UpOrNG9tEIEzFkhcLvwAGgdawjUpWYD4w04Ssg%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754824955\"",
  "Server": "cloudflare",
  "Vary": "Origin, Accept-Encoding",
  "Via": "2.0 heroku-router",
  "X-Content-Type-Options": "nosniff",
  "X-Powered-By": "Express",
  "X-Ratelimit-Limit": "1000",
  "X-Ratelimit-Remaining": "998",
  "X-Ratelimit-Reset": "1754824980",
  "Age": "311",
  "Cf-Cache-Status": "HIT",
  "Content-Encoding": "br",
  "CF-RAY": "96cf255b7c2f961c-KIX",
  "alt-svc": "h3=\":443\"; ma=86400"
}
2025-08-10 19:27:33 | INFO | utils.logging.logger:log_step:153 |    步骤: 验证响应 1个断言
2025-08-10 19:27:33 | INFO | utils.logging.logger:log_assertion:158 |    断言 [status_code] ✓ 期望: 404 | 实际: 404
2025-08-10 19:27:33 | INFO | utils.core.api.keywords:verify_response:196 | 响应验证通过
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.531s)
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 3: 测试结果验证
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 验证测试执行结果
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_assertion:173 |    ✅ 断言: 测试状态检查
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_assertion:174 |    📋 期望值: PASS
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_assertion:175 |    📊 实际值: PASS
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_assertion:176 |    🎯 结果: 通过
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_assertion:179 |    💬 说明: 测试用例 获取不存在的用户 执行结果
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:27:33 | INFO | utils.core.base.test_base:execute_test_case:149 | 测试用例执行成功: 获取不存在的用户
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:221 | ================================================================================
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:224 | ✅ 测试完成: 获取不存在的用户
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:225 | ⏱️ 总耗时: 0.531s
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:226 | 📊 总步骤数: 3
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:232 | ✅ 通过步骤: 3
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:233 | ❌ 失败步骤: 0
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:236 | 📋 测试总结:
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:238 |    测试结果: PASS
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:238 |    错误信息: None
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_test:240 | ================================================================================
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_test:32 | ================================================================================
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_test:33 | 🚀 开始执行测试: 获取文章列表
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_test:35 | 📝 测试描述: 测试带参数的文章列表查询
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_test:36 | ================================================================================
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 1: 测试用例初始化
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 准备测试环境和数据
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_action:89 |    ⚡ 加载测试用例配置: {
  "case_name": "获取文章列表",
  "test_type": "unknown",
  "priority": "normal"
}
2025-08-10 19:27:33 | INFO | utils.core.base.test_base:execute_test_case:116 | 执行测试用例: 获取文章列表
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 2: 执行测试逻辑
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 执行主要测试步骤
2025-08-10 19:27:33 | INFO | utils.logging.logger:log_step:153 |    步骤: 发送GET请求 https://jsonplaceholder.typicode.com/posts
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_request:94 |    🌐 API请求: GET https://jsonplaceholder.typicode.com/posts
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_request:97 |    📤 请求头: {
  "User-Agent": "python-requests/2.31.0",
  "Accept-Encoding": "gzip, deflate, br",
  "Accept": "*/*",
  "Connection": "keep-alive"
}
2025-08-10 19:27:33 | INFO | utils.logging.test_step_logger:log_api_request:100 |    🔗 请求参数: {
  "userId": 1,
  "_limit": 5
}
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_api_response:122 |    ✅ API响应: 200
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_api_response:125 |    ⏱️ 响应时间: 0.786s
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_api_response:128 |    📥 响应头: {
  "Date": "Sun, 10 Aug 2025 11:27:47 GMT",
  "Content-Type": "application/json; charset=utf-8",
  "Content-Length": "609",
  "Connection": "keep-alive",
  "Access-Control-Allow-Credentials": "true",
  "Access-Control-Expose-Headers": "X-Total-Count",
  "Cache-Control": "max-age=43200",
  "Content-Encoding": "gzip",
  "Etag": "W/\"58c-XF96V4HoAbG/R4eS8h5L5u97pS8\"",
  "Expires": "-1",
  "Nel": "{\"report_to\":\"heroku-nel\",\"response_headers\":[\"Via\"],\"max_age\":3600,\"success_fraction\":0.01,\"failure_fraction\":0.1}",
  "Pragma": "no-cache",
  "Report-To": "{\"group\":\"heroku-nel\",\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?s=d51MmCHaTQbInDmguVmKNHVFY%2FGgTPdUI5OTX2O3QVo%3D\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\u0026ts=1754825267\"}],\"max_age\":3600}",
  "Reporting-Endpoints": "heroku-nel=\"https://nel.heroku.com/reports?s=d51MmCHaTQbInDmguVmKNHVFY%2FGgTPdUI5OTX2O3QVo%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754825267\"",
  "Server": "cloudflare",
  "Vary": "Origin, Accept-Encoding",
  "Via": "2.0 heroku-router",
  "X-Content-Type-Options": "nosniff",
  "X-Powered-By": "Express",
  "X-Ratelimit-Limit": "1000",
  "X-Ratelimit-Remaining": "981",
  "X-Ratelimit-Reset": "1754825280",
  "X-Total-Count": "10",
  "Cf-Cache-Status": "MISS",
  "CF-RAY": "96cf255ec919961c-KIX",
  "alt-svc": "h3=\":443\"; ma=86400"
}
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_api_response:131 |    📋 响应体: [
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  }
]
2025-08-10 19:27:34 | INFO | utils.logging.logger:log_step:153 |    步骤: 验证响应 3个断言
2025-08-10 19:27:34 | INFO | utils.logging.logger:log_assertion:158 |    断言 [status_code] ✓ 期望: 200 | 实际: 200
2025-08-10 19:27:34 | WARNING | utils.core.api.assertions:_compare_values:329 | 不支持的比较操作符: is_list
2025-08-10 19:27:34 | INFO | utils.logging.logger:log_assertion:158 |    断言 [json_path[$] is_list] ✗ 期望: None | 实际: [{'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}, {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla'}, {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut'}, {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit'}, {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque'}]
2025-08-10 19:27:34 | ERROR | utils.core.api.assertions:assert_json_path:94 | 返回结果应为数组
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.796s)
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 3: 测试结果验证
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 验证测试执行结果
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_assertion:173 |    ❌ 断言: 测试状态检查
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_assertion:174 |    📋 期望值: PASS
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_assertion:175 |    📊 实际值: FAIL
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_assertion:176 |    🎯 结果: 失败
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_assertion:179 |    💬 说明: 测试用例 获取文章列表 执行结果
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:27:34 | ERROR | utils.core.base.test_base:execute_test_case:151 | 测试用例执行失败: 获取文章列表, 错误: 返回结果应为数组
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:221 | ================================================================================
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:224 | ❌ 测试完成: 获取文章列表
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:225 | ⏱️ 总耗时: 0.796s
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:226 | 📊 总步骤数: 3
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:232 | ✅ 通过步骤: 3
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:233 | ❌ 失败步骤: 0
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:236 | 📋 测试总结:
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:238 |    测试结果: FAIL
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:238 |    错误信息: 返回结果应为数组
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:240 | ================================================================================
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_test:32 | ================================================================================
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_test:33 | 🚀 开始执行测试: API响应时间测试
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_test:35 | 📝 测试描述: 测试API接口的响应时间性能
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_test:36 | ================================================================================
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 1: 测试用例初始化
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 准备测试环境和数据
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_action:89 |    ⚡ 加载测试用例配置: {
  "case_name": "API响应时间测试",
  "test_type": "unknown",
  "priority": "normal"
}
2025-08-10 19:27:34 | INFO | utils.core.base.test_base:execute_test_case:116 | 执行测试用例: API响应时间测试
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 2: 执行测试逻辑
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 执行主要测试步骤
2025-08-10 19:27:34 | INFO | utils.logging.logger:log_step:153 |    步骤: 发送GET请求 https://jsonplaceholder.typicode.com/posts
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_api_request:94 |    🌐 API请求: GET https://jsonplaceholder.typicode.com/posts
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_api_request:97 |    📤 请求头: {
  "User-Agent": "python-requests/2.31.0",
  "Accept-Encoding": "gzip, deflate, br",
  "Accept": "*/*",
  "Connection": "keep-alive"
}
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_api_response:122 |    ✅ API响应: 200
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_api_response:125 |    ⏱️ 响应时间: 0.480s
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_api_response:128 |    📥 响应头: {
  "Date": "Sun, 10 Aug 2025 11:27:47 GMT",
  "Content-Type": "application/json; charset=utf-8",
  "Transfer-Encoding": "chunked",
  "Connection": "keep-alive",
  "Access-Control-Allow-Credentials": "true",
  "Cache-Control": "max-age=43200",
  "Content-Encoding": "gzip",
  "Etag": "W/\"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM\"",
  "Expires": "-1",
  "Nel": "{\"report_to\":\"heroku-nel\",\"response_headers\":[\"Via\"],\"max_age\":3600,\"success_fraction\":0.01,\"failure_fraction\":0.1}",
  "Pragma": "no-cache",
  "Report-To": "{\"group\":\"heroku-nel\",\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?s=JLRxMDgIs%2Bi36tKGvn7N6WMcBDi%2BRdjDgwWjZLbLGGA%3D\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\u0026ts=1754816410\"}],\"max_age\":3600}",
  "Reporting-Endpoints": "heroku-nel=\"https://nel.heroku.com/reports?s=JLRxMDgIs%2Bi36tKGvn7N6WMcBDi%2BRdjDgwWjZLbLGGA%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754816410\"",
  "Server": "cloudflare",
  "Vary": "Origin, Accept-Encoding",
  "Via": "2.0 heroku-router",
  "X-Content-Type-Options": "nosniff",
  "X-Powered-By": "Express",
  "X-Ratelimit-Limit": "1000",
  "X-Ratelimit-Remaining": "999",
  "X-Ratelimit-Reset": "1754816460",
  "Age": "8856",
  "Cf-Cache-Status": "HIT",
  "CF-RAY": "96cf2563c88a961c-KIX",
  "alt-svc": "h3=\":443\"; ma=86400"
}
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_api_response:131 |    📋 响应体: [
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est",
    "body": "debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nvoluptates omnis consequatur aut enim officiis in quam qui"
  },
  {
    "userId": 4,
    "id": 38,
    "title": "explicabo et eos deleniti nostrum ab id repellendus",
    "body": "animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus ea\nrerum repudiandae quia voluptatem delectus fugit aut id quia\nratione optio eos iusto veniam iure"
  },
  {
    "userId": 4,
    "id": 39,
    "title": "eos dolorem iste accusantium est eaque quam",
    "body": "corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti asperiores fuga aut\nvoluptas sapiente vel dolore minus voluptatem incidunt ex"
  },
  {
    "userId": 4,
    "id": 40,
    "title": "enim quo cumque",
    "body": "ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptatem iure quasi maxime voluptas nam"
  },
  {
    "userId": 5,
    "id": 41,
    "title": "non est facere",
    "body": "molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\nnam quidem est ducimus sunt debitis saepe"
  },
  {
    "userId": 5,
    "id": 42,
    "title": "commodi ullam sint et excepturi error explicabo praesentium voluptas",
    "body": "odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis aliquam sunt sequi nulla dolorem\nnon facere repellendus voluptates quia\nratione harum vitae ut"
  },
  {
    "userId": 5,
    "id": 43,
    "title": "eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis",
    "body": "similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexercitationem quos nam commodi possimus cum odio nihil nulla\ndolorum exercitationem magnam ex et a et distinctio debitis"
  },
  {
    "userId": 5,
    "id": 44,
    "title": "optio dolor molestias sit",
    "body": "temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iure quam sed maxime ut distinctio quae"
  },
  {
    "userId": 5,
    "id": 45,
    "title": "ut numquam possimus omnis eius suscipit laudantium iure",
    "body": "est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum repellendus dolorem autem"
  },
  {
    "userId": 5,
    "id": 46,
    "title": "aut quo modi neque nostrum ducimus",
    "body": "voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid"
  },
  {
    "userId": 5,
    "id": 47,
    "title": "quibusdam cumque rem aut deserunt",
    "body": "voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beatae rerum ea iure soluta nostrum\neligendi et voluptate"
  },
  {
    "userId": 5,
    "id": 48,
    "title": "ut voluptatem illum ea doloribus itaque eos",
    "body": "voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab deleniti\nlaudantium repellat ad ut et autem reprehenderit"
  },
  {
    "userId": 5,
    "id": 49,
    "title": "laborum non sunt aut ut assumenda perspiciatis voluptas",
    "body": "inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum veritatis non\nquibusdam officiis aspernatur cumque aut commodi aut"
  },
  {
    "userId": 5,
    "id": 50,
    "title": "repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem",
    "body": "error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi et est et voluptates\nquia distinctio ab amet quaerat molestiae et vitae\nadipisci impedit sequi nesciunt quis consectetur"
  },
  {
    "userId": 6,
    "id": 51,
    "title": "soluta aliquam aperiam consequatur illo quis voluptas",
    "body": "sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores sit consectetur dolorem"
  },
  {
    "userId": 6,
    "id": 52,
    "title": "qui enim et consequuntur quia animi quis voluptate quibusdam",
    "body": "iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iusto accusantium provident architecto\nsoluta esse reprehenderit qui laborum"
  },
  {
    "userId": 6,
    "id": 53,
    "title": "ut quo aut ducimus alias",
    "body": "minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quidem veritatis sunt non explicabo similique"
  },
  {
    "userId": 6,
    "id": 54,
    "title": "sit asperiores ipsam eveniet odio non quia",
    "body": "totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero incidunt corrupti mollitia"
  },
  {
    "userId": 6,
    "id": 55,
    "title": "sit vel voluptatem et non libero",
    "body": "debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis molestiae\nnihil ut eum odit"
  },
  {
    "userId": 6,
    "id": 56,
    "title": "qui et at rerum necessitatibus",
    "body": "aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis harum reprehenderit dolores eligendi"
  },
  {
    "userId": 6,
    "id": 57,
    "title": "sed ab est est",
    "body": "at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est"
  },
  {
    "userId": 6,
    "id": 58,
    "title": "voluptatum itaque dolores nisi et quasi",
    "body": "veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad similique veniam"
  },
  {
    "userId": 6,
    "id": 59,
    "title": "qui commodi dolor at maiores et quis id accusantium",
    "body": "perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores suscipit voluptas et\nanimi doloribus cum rerum quas et magni\net hic ut ut commodi expedita sunt"
  },
  {
    "userId": 6,
    "id": 60,
    "title": "consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere",
    "body": "asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et fuga perferendis voluptas\nillo ratione amet aut et omnis"
  },
  {
    "userId": 7,
    "id": 61,
    "title": "voluptatem doloribus consectetur est ut ducimus",
    "body": "ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blanditiis debitis in nesciunt doloribus dicta dolores\nmagnam minus velit"
  },
  {
    "userId": 7,
    "id": 62,
    "title": "beatae enim quia vel",
    "body": "enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omnis\nquo molestiae omnis ea eveniet optio"
  },
  {
    "userId": 7,
    "id": 63,
    "title": "voluptas blanditiis repellendus animi ducimus error sapiente et suscipit",
    "body": "enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\nab delectus culpa quo reprehenderit blanditiis asperiores\naccusantium ut quam in voluptatibus voluptas ipsam dicta"
  },
  {
    "userId": 7,
    "id": 64,
    "title": "et fugit quas eum in in aperiam quod",
    "body": "id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaque aut aut qui"
  },
  {
    "userId": 7,
    "id": 65,
    "title": "consequatur id enim sunt et et",
    "body": "voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperiores et perferendis\nnatus id esse incidunt pariatur"
  },
  {
    "userId": 7,
    "id": 66,
    "title": "repudiandae ea animi iusto",
    "body": "officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusdam et nemo iusto saepe"
  },
  {
    "userId": 7,
    "id": 67,
    "title": "aliquid eos sed fuga est maxime repellendus",
    "body": "reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet\nnon sapiente et consequatur necessitatibus molestiae"
  },
  {
    "userId": 7,
    "id": 68,
    "title": "odio quis facere architecto reiciendis optio",
    "body": "magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti quidem saepe porro velit"
  },
  {
    "userId": 7,
    "id": 69,
    "title": "fugiat quod pariatur odit minima",
    "body": "officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\nsequi commodi repudiandae asperiores et saepe a"
  },
  {
    "userId": 7,
    "id": 70,
    "title": "voluptatem laborum magni",
    "body": "sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore"
  },
  {
    "userId": 8,
    "id": 71,
    "title": "et iusto veniam et illum aut fuga",
    "body": "occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim velit est perferendis"
  },
  {
    "userId": 8,
    "id": 72,
    "title": "sint hic doloribus consequatur eos non id",
    "body": "quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque id sunt ut aut accusamus\nsunt consectetur expedita inventore velit"
  },
  {
    "userId": 8,
    "id": 73,
    "title": "consequuntur deleniti eos quia temporibus ab aliquid at",
    "body": "voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatur\ntempore cumque quae est et\net in consequuntur voluptatem voluptates aut"
  },
  {
    "userId": 8,
    "id": 74,
    "title": "enim unde ratione doloribus quas enim ut sit sapiente",
    "body": "odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magnam et quam\nblanditiis est itaque\nquo et tenetur ratione occaecati molestiae tempora"
  },
  {
    "userId": 8,
    "id": 75,
    "title": "dignissimos eum dolor ut enim et delectus in",
    "body": "commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui delectus facilis temporibus\nrerum amet et nemo voluptate expedita adipisci error dolorem"
  },
  {
    "userId": 8,
    "id": 76,
    "title": "doloremque officiis ad et non perferendis",
    "body": "ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio"
  },
  {
    "userId": 8,
    "id": 77,
    "title": "necessitatibus quasi exercitationem odio",
    "body": "modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident"
  },
  {
    "userId": 8,
    "id": 78,
    "title": "quam voluptatibus rerum veritatis",
    "body": "nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus"
  },
  {
    "userId": 8,
    "id": 79,
    "title": "pariatur consequatur quia magnam autem omnis non amet",
    "body": "libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam molestiae ducimus est\nofficiis esse molestiae iste et quos"
  },
  {
    "userId": 8,
    "id": 80,
    "title": "labore in ex et explicabo corporis aut quas",
    "body": "ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias provident\nminus incidunt vero fugit rerum sint sunt excepturi provident"
  },
  {
    "userId": 9,
    "id": 81,
    "title": "tempora rem veritatis voluptas quo dolores vero",
    "body": "facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum non ratione velit laboriosam quis consequuntur\nex officiis minima doloremque voluptas ut aut"
  },
  {
    "userId": 9,
    "id": 82,
    "title": "laudantium voluptate suscipit sunt enim enim",
    "body": "ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus adipisci\ndolor enim assumenda soluta laboriosam amet iste delectus hic"
  },
  {
    "userId": 9,
    "id": 83,
    "title": "odit et voluptates doloribus alias odio et",
    "body": "est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\nreprehenderit eius rem quibusdam"
  },
  {
    "userId": 9,
    "id": 84,
    "title": "optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut",
    "body": "sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique veniam\nrecusandae dignissimos dolor incidunt consequatur odio"
  },
  {
    "userId": 9,
    "id": 85,
    "title": "dolore veritatis porro provident adipisci blanditiis et sunt",
    "body": "similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam sint sed tempora\nenim provident pariatur praesentium atque animi amet ratione"
  },
  {
    "userId": 9,
    "id": 86,
    "title": "placeat quia et porro iste",
    "body": "quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel explicabo autem\nasperiores pariatur deserunt optio"
  },
  {
    "userId": 9,
    "id": 87,
    "title": "nostrum quis quasi placeat",
    "body": "eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est"
  },
  {
    "userId": 9,
    "id": 88,
    "title": "sapiente omnis fugit eos",
    "body": "consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed"
  },
  {
    "userId": 9,
    "id": 89,
    "title": "sint soluta et vel magnam aut ut sed qui",
    "body": "repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\ntempore quas est"
  },
  {
    "userId": 9,
    "id": 90,
    "title": "ad iusto omnis odit dolor voluptatibus",
    "body": "minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta similique molestias praesentium blanditiis"
  },
  {
    "userId": 10,
    "id": 91,
    "title": "aut amet sed",
    "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
  },
  {
    "userId": 10,
    "id": 92,
    "title": "ratione ex tenetur perferendis",
    "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
  },
  {
    "userId": 10,
    "id": 93,
    "title": "beatae soluta recusandae",
    "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
  },
  {
    "userId": 10,
    "id": 94,
    "title": "qui qui voluptates illo iste minima",
    "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
  },
  {
    "userId": 10,
    "id": 95,
    "title": "id minus libero illum nam ad officiis",
    "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
  },
  {
    "userId": 10,
    "id": 96,
    "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
    "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
  },
  {
    "userId": 10,
    "id": 97,
    "title": "quas fugiat ut perspiciatis vero provident",
    "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
  },
  {
    "userId": 10,
    "id": 98,
    "title": "laboriosam dolor voluptates",
    "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
  },
  {
    "userId": 10,
    "id": 99,
    "title": "temporibus sit alias delectus eligendi possimus magni",
    "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
  },
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
]
2025-08-10 19:27:34 | INFO | utils.logging.logger:log_step:153 |    步骤: 验证响应 2个断言
2025-08-10 19:27:34 | INFO | utils.logging.logger:log_assertion:158 |    断言 [status_code] ✓ 期望: 200 | 实际: 200
2025-08-10 19:27:34 | INFO | utils.logging.logger:log_assertion:158 |    断言 [response_time] ✓ 期望: <= 2000s | 实际: 0.443s
2025-08-10 19:27:34 | INFO | utils.core.api.keywords:verify_response:196 | 响应验证通过
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.487s)
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_step:53 | 📋 步骤 3: 测试结果验证
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:start_step:55 |    📄 描述: 验证测试执行结果
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_assertion:173 |    ✅ 断言: 测试状态检查
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_assertion:174 |    📋 期望值: PASS
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_assertion:175 |    📊 实际值: PASS
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_assertion:176 |    🎯 结果: 通过
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:log_assertion:179 |    💬 说明: 测试用例 API响应时间测试 执行结果
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_step:209 |    ✅ 步骤完成: PASSED (耗时: 0.000s)
2025-08-10 19:27:34 | INFO | utils.core.base.test_base:execute_test_case:149 | 测试用例执行成功: API响应时间测试
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:221 | ================================================================================
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:224 | ✅ 测试完成: API响应时间测试
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:225 | ⏱️ 总耗时: 0.487s
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:226 | 📊 总步骤数: 3
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:232 | ✅ 通过步骤: 3
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:233 | ❌ 失败步骤: 0
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:236 | 📋 测试总结:
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:238 |    测试结果: PASS
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:238 |    错误信息: None
2025-08-10 19:27:34 | INFO | utils.logging.test_step_logger:end_test:240 | ================================================================================
2025-08-10 19:27:34 | INFO | utils.core.base.test_base:teardown_method:37 | 测试执行完成: test_single_api_cases
2025-08-10 19:27:34 | INFO | utils.logging.logger:end_test:187 | 测试执行完成
2025-08-10 19:27:34 | INFO | test_case.api.test_api_driver:teardown_test:19 | API测试环境清理完成
2025-08-10 19:27:34 | INFO | test_case.conftest:pytest_runtest_teardown:133 | 测试执行完成: test_single_api_cases
2025-08-10 19:27:34 | INFO | utils.core.api.client:logout:420 | 未配置登出接口，跳过登出请求
2025-08-10 19:27:34 | INFO | utils.core.api.client:clear_token:456 | token已清除
2025-08-10 19:27:34 | INFO | utils.core.api.client:logout:427 | 登出操作完成
2025-08-10 19:27:34 | INFO | utils.core.api.client:close:464 | API客户端会话已关闭
2025-08-10 19:27:34 | INFO | test_case.api.conftest:api_client:96 | API客户端清理完成
